import deburr from 'lodash.deburr';

const compose = (...fns) => x => fns.reduceRight((acc, fn) => fn(acc), x);
const join = x => y => y.join(x);
const filter = x => y => y.filter(x);
const replace = (rx, rp) => x => x.replace(rx, rp);
const split = x => y => y.split(x);
const toLowerCase = x => x.toLowerCase();
const trim = x => x.trim();

const joinWithDash = join('-');
const filterEmptyStr = filter(Boolean);
const splitCamelcase = compose(
  replace(/([A-Z]+)([A-Z][a-z\d]+)/g, '$1 $2'),
  replace(/([a-z\d])([A-Z])/g, '$1 $2'),
);
const replaceDiacritcs = deburr;
const removeSpecialChars = replace(/[^\w\s]/gi, '');
const splitOnSpecialChars = replace(/&|-|_|\./g, ' ');
const splitOnSpace = split(' ');
const trimOuterSpace = trim;

const slugify = compose(
  joinWithDash,
  filterEmptyStr,
  splitOnSpace,
  removeSpecialChars,
  splitOnSpecialChars,
  replaceDiacritcs,
  toLowerCase,
  splitCamelcase,
  trimOuterSpace,
);

export default slugify;
