"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const unist_util_visit_1 = __importDefault(require("unist-util-visit"));
const mdast_util_to_string_1 = __importDefault(require("mdast-util-to-string"));
// TODO: https://github.com/sindresorhus/humanize-url/issues/1
const truncate_middle_js_1 = require("autolinker/dist/commonjs/truncate/truncate-middle.js");
const truncate_smart_js_1 = require("autolinker/dist/commonjs/truncate/truncate-smart.js");
const truncate_end_js_1 = require("autolinker/dist/commonjs/truncate/truncate-end.js");
var Style;
(function (Style) {
    Style["Smart"] = "smart";
    Style["Middle"] = "middle";
    Style["End"] = "end";
})(Style = exports.Style || (exports.Style = {}));
const truncators = {
    [Style.Smart]: truncate_smart_js_1.truncateSmart,
    [Style.Middle]: truncate_middle_js_1.truncateMiddle,
    [Style.End]: truncate_end_js_1.truncateEnd,
};
function remarkTruncateLinks({ style = Style.Smart, length = 30, } = {}) {
    const truncator = truncators[style];
    if (typeof truncator !== `function`) {
        const supportedStyles = Object.keys(truncators).join(`, `);
        throw new Error(`Please select one of the supported styles [${supportedStyles}]`);
    }
    return function (ast) {
        unist_util_visit_1.default(ast, 'link', (node) => {
            const value = mdast_util_to_string_1.default(node);
            if (value === node.url) {
                node.children = [
                    { type: 'text', value: truncator(value, length, `...`) },
                ];
            }
        });
    };
}
exports.remarkTruncateLinks = remarkTruncateLinks;
